name: Build and Deploy Code # name of function

# on: [push,pull_request]

on: # triggers action
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo # description for command
        uses: actions/checkout@v2 # pull changing
      - name: greeting info
        run: echo "hello deployer!"
      - name: install python version 3.9
        uses: actions/setup-python@v2 # use defined action (builtin)
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip # run command on linux
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          # pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache
      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}



